Resumo arquitetura Serverless e Faas
	A arquitetura Serverless é um modelo de desenvolvimento nativo em nuvem para criação e execução de aplicações sem o gerenciamento de servidores. Sendo assim a proposta seria de permitir que o software seja criado e mantido sem a preocupação com a infraestrutura. Os servidores ainda são utilizados nesse modelo, mas quem fica responsável pelas tarefas é o provedor de nuvem.
	As soluções serverless são oferecidas sob demanda por meio de um modelo de execução orientado a eventos, possibilitando assim que caso a demanda das aplicações aumente ou diminua as aplicações se adequam automaticamente.
	Com essa proposta surge a FaaS (Function as a Service), onde o time de desenvolvimento do software não é responsável mais por gerenciar a infraestrura de servidores e nenhuma configuração associada (capacidade de processamento, armazenamento, atualização de servidores), todas essas funções são do provedor de nuvem. 
	Já em cloud computing as aplicações estarão armazenadas em um servidor em nuvem e todos os recursos de infraestrutura serão disponibilizados pela empresa que oferece o serviço, sendo que nesse caso a aplicação estará funcionando o tempo todo, mas ainda com as vantagens de redução de custos e agilidade para inovação de tecnologias. Além disso a cloud computing é interessante para previnir riscos com relação a acidentes com equipamentos.            
	Sendo assim o desenvolvedor tem mais tempo para se dedicar para o desenvolvimento do código em si e não precisa se preocupar com toda a etapa de configuração, mas tem a função de empacotar o código em containers para fazer a implantação. 
	O modelo serverless tem diversas vantagens com relação ao custo e facilidades como já mencionados, mas além disso ele é ideal para aplicações assíncronas e stateless que podem ser iniciadas instantaneamente, também sendo uma boa opção para aplicações em que a demanda tem oscilações muito grandes e de forma imprevisível. Acaba sendo muito aplicavél em situações como chat bots, tarefas agendadas e lógica empresarial.
	Com isso é possível entender que torna-se necessário a utilização de arquitetura de microsserviços para implementação para arquitetura Serverless, mas que ambas são tópicos diferentes já que a primeira trata-se do aspecto organizacional do projeto e a outra trata-se da forma de rodar a aplicação, mas podem e devem estar associadas no mesmo projeto. Diferente da arquitetura monolítica que não pode ser aplicada na Serverless por se tratar de um único servico a aplicação inteira, impedindo o seu uso por demanda e dificultando seu envio em containers.
